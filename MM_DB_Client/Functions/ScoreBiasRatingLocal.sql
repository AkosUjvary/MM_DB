
/*
 ------------------------------------------------- MM SCORE BIAS RATING FUNCTION ----------------------------------------------------------
|                                                                                                                                         |
| Name: ScoreBiasRatingLocal.sql                                                                                                          |
| Created: Akos Ujvary                                                                                                                    |
|                                                                                                                                         |
| Desc :  Setting the weight of rating. Comparing which rating source is the most suitable for the user,                                  |
|         then based on min and avg set the weight                                                                                        |
| Last modified: 2022.09.07   Creation                                                                                                    |        
 -----------------------------------------------------------------------------------------------------------------------------------------
*/ 


CREATE OR ALTER FUNCTION control.f_ScoreBiasRatingLocal(@BIAS_TYPE varchar(30), @CB_TYPE varchar(30), @IMDB_RATING NUMERIC(3), @METASCORE NUMERIC(3), @TOMATOMETER NUMERIC(3), @TOMATO_USER_METER NUMERIC(3),
                                                        @MIN_IMDB_RATING NUMERIC(3), @AVG_IMDB_RATING NUMERIC(3), @WEIGHT_IMDB_RATING FLOAT, 
                                                        @MIN_METASCORE NUMERIC(3), @AVG_METASCORE NUMERIC(3), @WEIGHT_METASCORE FLOAT,
                                                        @MIN_TOMATOMETER NUMERIC(3), @AVG_TOMATOMETER NUMERIC(3), @WEIGHT_TOMATOMETER FLOAT, 
                                                        @MIN_TOMATO_USER_METER NUMERIC(3), @AVG_TOMATO_USER_METER NUMERIC(3), @WEIGHT_TOMATO_USER_METER FLOAT)
RETURNS NUMERIC(4)
WITH SCHEMABINDING
AS
BEGIN

    DECLARE @RTN NUMERIC(4);
    DECLARE @GLOBAL_MULTIPLIER NUMERIC(3);
    IF(@BIAS_TYPE='COUNTRY') SELECT @GLOBAL_MULTIPLIER=GLOBAL_MULTIPLIER_COUNTRY FROM CONTROL.BIAS_SETTING WHERE CB_TYPE=@CB_TYPE;
    IF(@BIAS_TYPE='GLOBAL') SELECT @GLOBAL_MULTIPLIER=GLOBAL_MULTIPLIER_GLOBAL FROM CONTROL.BIAS_SETTING WHERE CB_TYPE=@CB_TYPE;


    DECLARE @MIN_RATING_SCORE_IMDB NUMERIC(3);
    DECLARE @MIN_RATING_SCORE_META NUMERIC(3);
    DECLARE @MIN_RATING_SCORE_TOM NUMERIC(3);
    DECLARE @MIN_RATING_SCORE_TOM_USER NUMERIC(3);

    DECLARE @AVG_SCORE_IMDB NUMERIC(3);
    DECLARE @AVG_SCORE_META NUMERIC(3);
    DECLARE @AVG_SCORE_TOM NUMERIC(3);
    DECLARE @AVG_SCORE_TOM_USER NUMERIC(3);

    DECLARE @AVG_MIN_IMDB NUMERIC(3);
    DECLARE @AVG_MIN_META NUMERIC(3);
    DECLARE @AVG_MIN_TOM NUMERIC(3);
    DECLARE @AVG_MIN_TOM_USER NUMERIC(3);

    DECLARE @AVG_MAX_IMDB NUMERIC(3);
    DECLARE @AVG_MAX_META NUMERIC(3);
    DECLARE @AVG_MAX_TOM NUMERIC(3);
    DECLARE @AVG_MAX_TOM_USER NUMERIC(3);

    DECLARE @RATING_RANK_MULTIPLIER_IMDB FLOAT;
    DECLARE @RATING_RANK_MULTIPLIER_META FLOAT;
    DECLARE @RATING_RANK_MULTIPLIER_TOM FLOAT;
    DECLARE @RATING_RANK_MULTIPLIER_TOM_USER FLOAT;

    SELECT @MIN_RATING_SCORE_IMDB=MIN_RATING_SCORE, @AVG_SCORE_IMDB=AVG_SCORE, @AVG_MIN_IMDB=AVG_MIN, @AVG_MAX_IMDB=AVG_MAX, @RATING_RANK_MULTIPLIER_IMDB=RATING_RANK_MULTIPLIER FROM CONTROL.BIAS_SETTING BS WHERE BS.RATING_TYPE='IMDB' AND CB_TYPE=@CB_TYPE
    SELECT @MIN_RATING_SCORE_META=MIN_RATING_SCORE, @AVG_SCORE_META=AVG_SCORE, @AVG_MIN_META=AVG_MIN, @AVG_MAX_META=AVG_MAX, @RATING_RANK_MULTIPLIER_META=RATING_RANK_MULTIPLIER FROM CONTROL.BIAS_SETTING BS WHERE BS.RATING_TYPE='META' AND CB_TYPE=@CB_TYPE
    SELECT @MIN_RATING_SCORE_TOM=MIN_RATING_SCORE, @AVG_SCORE_TOM=AVG_SCORE, @AVG_MIN_TOM=AVG_MIN, @AVG_MAX_TOM=AVG_MAX, @RATING_RANK_MULTIPLIER_TOM=RATING_RANK_MULTIPLIER FROM CONTROL.BIAS_SETTING BS WHERE BS.RATING_TYPE='TOM' AND CB_TYPE=@CB_TYPE
    SELECT @MIN_RATING_SCORE_TOM_USER=MIN_RATING_SCORE, @AVG_SCORE_TOM_USER=AVG_SCORE, @AVG_MIN_TOM_USER=AVG_MIN, @AVG_MAX_TOM_USER=AVG_MAX, @RATING_RANK_MULTIPLIER_TOM_USER=RATING_RANK_MULTIPLIER FROM CONTROL.BIAS_SETTING BS WHERE BS.RATING_TYPE='TOM_USER' AND CB_TYPE=@CB_TYPE


    DECLARE @WEIGHT_IMDB_RANK NUMERIC;
    DECLARE @WEIGHT_META_RANK NUMERIC;
    DECLARE @WEIGHT_TOM_RANK NUMERIC;
    DECLARE @WEIGHT_TOM_USER_RANK NUMERIC;
     
    SELECT @WEIGHT_IMDB_RANK=RNK FROM 
    (SELECT TYPE,  RANK() OVER (ORDER BY WEIGHT) as RNK   FROM
    (SELECT @WEIGHT_IMDB_RATING AS WEIGHT, 'IMDB' AS TYPE UNION ALL SELECT @WEIGHT_METASCORE AS weight, 'META' AS TYPE UNION ALL SELECT @WEIGHT_TOMATOMETER AS weight, 'TOM' AS TYPE UNION ALL SELECT @WEIGHT_TOMATO_USER_METER AS weight, 'TOM_USER' AS TYPE) PARAMS) RNKD
    WHERE TYPE='IMDB'

    SELECT @WEIGHT_META_RANK=RNK FROM 
    (SELECT TYPE,  RANK() OVER (ORDER BY WEIGHT) as RNK   FROM
    (SELECT @WEIGHT_IMDB_RATING AS WEIGHT, 'IMDB' AS TYPE UNION ALL SELECT @WEIGHT_METASCORE AS weight, 'META' AS TYPE UNION ALL SELECT @WEIGHT_TOMATOMETER AS weight, 'TOM' AS TYPE UNION ALL SELECT @WEIGHT_TOMATO_USER_METER AS weight, 'TOM_USER' AS TYPE) PARAMS) RNKD
    WHERE TYPE='META'

    SELECT @WEIGHT_TOM_RANK=RNK FROM 
    (SELECT TYPE,  RANK() OVER (ORDER BY WEIGHT) as RNK   FROM
    (SELECT @WEIGHT_IMDB_RATING AS WEIGHT, 'IMDB' AS TYPE UNION ALL SELECT @WEIGHT_METASCORE AS weight, 'META' AS TYPE UNION ALL SELECT @WEIGHT_TOMATOMETER AS weight, 'TOM' AS TYPE UNION ALL SELECT @WEIGHT_TOMATO_USER_METER AS weight, 'TOM_USER' AS TYPE) PARAMS) RNKD
    WHERE TYPE='TOM'

    SELECT @WEIGHT_TOM_USER_RANK=RNK FROM 
    (SELECT TYPE,  RANK() OVER (ORDER BY WEIGHT) as RNK   FROM
    (SELECT @WEIGHT_IMDB_RATING AS WEIGHT, 'IMDB' AS TYPE UNION ALL SELECT @WEIGHT_METASCORE AS weight, 'META' AS TYPE UNION ALL SELECT @WEIGHT_TOMATOMETER AS weight, 'TOM' AS TYPE UNION ALL SELECT @WEIGHT_TOMATO_USER_METER AS weight, 'TOM_USER' AS TYPE) PARAMS) RNKD
    WHERE TYPE='TOM_USER'

    DECLARE @WEIGHT_IMDB_SCORE NUMERIC
    DECLARE @WEIGHT_META_SCORE NUMERIC;
    DECLARE @WEIGHT_TOM_SCORE NUMERIC;
    DECLARE @WEIGHT_TOM_USER_SCORE NUMERIC;


    SET @WEIGHT_IMDB_SCORE=IIF(@IMDB_RATING>@MIN_IMDB_RATING, @MIN_RATING_SCORE_IMDB, 0);
    SET @WEIGHT_IMDB_SCORE=IIF(@IMDB_RATING>@AVG_IMDB_RATING-@AVG_MIN_IMDB AND @IMDB_RATING<@AVG_IMDB_RATING+@AVG_MAX_IMDB, @WEIGHT_IMDB_SCORE+@AVG_SCORE_IMDB, @WEIGHT_IMDB_SCORE);
    SET @WEIGHT_IMDB_SCORE=@WEIGHT_IMDB_SCORE*(1+0.1*(((0.001*@IMDB_RATING*COALESCE(@AVG_IMDB_RATING,1))+0.1*@WEIGHT_IMDB_RANK)*@RATING_RANK_MULTIPLIER_IMDB));

    SET @WEIGHT_META_SCORE=IIF(@METASCORE>@MIN_METASCORE, @MIN_RATING_SCORE_META, 0);
    SET @WEIGHT_META_SCORE=IIF(@METASCORE>@AVG_METASCORE-@AVG_MIN_META AND @METASCORE<@AVG_METASCORE+@AVG_MAX_META, @WEIGHT_META_SCORE+@AVG_SCORE_META, @WEIGHT_META_SCORE);
    SET @WEIGHT_META_SCORE=@WEIGHT_META_SCORE*(1+0.1*(((0.001*@METASCORE*COALESCE(@AVG_METASCORE,1))+0.1*@WEIGHT_META_RANK)*@RATING_RANK_MULTIPLIER_META));

    SET @WEIGHT_TOM_SCORE=IIF(@TOMATOMETER>@MIN_TOMATOMETER, @MIN_RATING_SCORE_TOM, 0);
    SET @WEIGHT_TOM_SCORE=IIF(@TOMATOMETER>@AVG_TOMATOMETER-@AVG_MIN_TOM AND @TOMATOMETER<@AVG_TOMATOMETER+@AVG_MAX_TOM, @WEIGHT_TOM_SCORE+@AVG_SCORE_TOM, @WEIGHT_TOM_SCORE);
    SET @WEIGHT_TOM_SCORE=@WEIGHT_TOM_SCORE*(1+0.1*(((0.001*@TOMATOMETER*COALESCE(@AVG_TOMATOMETER,1))+0.1*@WEIGHT_TOM_RANK)*@RATING_RANK_MULTIPLIER_TOM));
    
    SET @WEIGHT_TOM_USER_SCORE=IIF(@TOMATO_USER_METER>@MIN_TOMATO_USER_METER, @MIN_RATING_SCORE_TOM_USER, 0);
    SET @WEIGHT_TOM_USER_SCORE=IIF(@TOMATO_USER_METER>@AVG_TOMATO_USER_METER-@AVG_MIN_TOM_USER AND @TOMATO_USER_METER<@AVG_TOMATO_USER_METER+@AVG_MAX_TOM_USER, @WEIGHT_TOM_USER_SCORE+@AVG_SCORE_TOM_USER, @WEIGHT_TOM_USER_SCORE);
    SET @WEIGHT_TOM_USER_SCORE=@WEIGHT_TOM_USER_SCORE*(1+0.1*(((0.001*@TOMATO_USER_METER*COALESCE(@AVG_TOMATO_USER_METER,1))+0.1*@WEIGHT_TOM_USER_RANK)*@RATING_RANK_MULTIPLIER_TOM_USER));
    
    SELECT @RTN=MAX(SCRS.SCORE) FROM
    (SELECT @WEIGHT_IMDB_SCORE AS SCORE UNION ALL SELECT @WEIGHT_META_SCORE AS SCORE UNION ALL SELECT @WEIGHT_TOM_SCORE AS SCORE  UNION ALL SELECT @WEIGHT_TOM_USER_SCORE AS SCORE)SCRS
      
    SET @RTN=@RTN * @GLOBAL_MULTIPLIER;
    RETURN @RTN    

END

----------------- End of code ------------------------

/*
testing

SELECT CONTROL.F_SCOREBIASRATINGLOCAL('GLOBAL', 'BASIC_1', 70,70,70,70,40,60,90,60,70,98,50,50,91,70,70,92)

*/
